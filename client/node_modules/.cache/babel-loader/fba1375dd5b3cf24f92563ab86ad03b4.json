{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryan/Desktop/Kingsland-University/Homework Files/Module-6-Homework/capital-block/client/src/components/Registration/Register.js\";\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport API from '../';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      // console.log(e)\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.name && this.state.email && this.state.password) {\n        API.saveUser({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          date: Date.now()\n        }).then(this.setState(() => ({\n          toHome: true,\n          loggedIn: true\n        }))).then(res => {\n          console.log(res);\n          const token = res.data;\n          console.log(token);\n          const name = res.data.name;\n          cookies.set('x-auth-token', token, {\n            path: '/'\n          });\n          cookies.set('name', name, {\n            path: '/'\n          });\n          this.props.history.replace('/');\n          console.log(`${this.state.loggedIn}`);\n        }).catch(err => console.log(err));\n      }\n\n      console.log('ðŸŒŽ  ==> DB clucking!!!!  ðŸŒŽ');\n    };\n\n    this.state = {\n      toHome: false,\n      loggedIn: false,\n      name: '',\n      email: '',\n      password: '',\n      repassword: '',\n      error: {\n        name: '',\n        email: '',\n        password: '',\n        repassword: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MDBContainer, {\n      align: \"center\",\n      id: \"register-container\",\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n          md: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            align: \"left\",\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"h4 text-center mb-4\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"RegisterName\",\n              className: \"grey-text\",\n              children: \"Your first name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: \"form-control\",\n              value: this.state.name,\n              onChange: this.handleChange,\n              autoComplete: \"name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"RegisterEmail\",\n              className: \"grey-text\",\n              children: \"Your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              className: \"form-control\",\n              value: this.state.email,\n              onChange: this.handleChange,\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"RegisterPassword\",\n              className: \"grey-text\",\n              children: \"Your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              className: \"form-control\",\n              value: this.state.password,\n              onChange: this.handleChange,\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"RegisterPasswordConfirm\",\n              className: \"grey-text\",\n              children: \"Confirm your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"repassword\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-4\",\n              children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                type: \"submit\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          md: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default _c = withRouter(RegisterPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/ryan/Desktop/Kingsland-University/Homework Files/Module-6-Homework/capital-block/client/src/components/Registration/Register.js"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","API","withRouter","Cookies","cookies","RegisterPage","Component","constructor","props","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","state","name","email","password","saveUser","date","Date","now","then","toHome","loggedIn","res","console","log","token","data","set","path","history","replace","catch","err","repassword","error","bind","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport API from '../';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nclass RegisterPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toHome: false,\n            loggedIn: false,\n            name: '',\n            email: '',\n            password: '',\n            repassword: '',\n            error: {\n                name: '',\n                email: '',\n                password: '',\n                repassword: ''\n            }\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n    handleChange = (e) => {\n        // console.log(e)\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.name && this.state.email && this.state.password){\n            \n            API.saveUser({\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                date: Date.now()\n                \n\n            }).then(this.setState(() => ({\n                toHome: true,\n                loggedIn: true\n                \n            }))).then(res => {\n                console.log(res);\n                \n                const token = res.data;\n                console.log(token);\n\n                const name = res.data.name;\n\n                cookies.set('x-auth-token', token, {path:'/'})\n                cookies.set('name', name, {path:'/'})\n                this.props.history.replace('/');\n                console.log(`${this.state.loggedIn}`)})\n            .catch(err => console.log(err));\n        }\n        \n        console.log('ðŸŒŽ  ==> DB clucking!!!!  ðŸŒŽ');\n    }\n\n    render(){\n        return (\n            <MDBContainer align = 'center' id='register-container'>\n                <MDBRow align='center'>\n                    <MDBCol md=\"3\"/>\n                    <MDBCol md=\"6\">\n                        <form align='left' onSubmit={this.handleSubmit}>\n                            <p className=\"h4 text-center mb-4\">Sign up</p>\n                            <label htmlFor=\"RegisterName\" className=\"grey-text\">Your first name</label>\n                            <input type=\"text\" id=\"name\" className=\"form-control\" value={this.state.name} onChange={this.handleChange} autoComplete='name' required/>\n                            <br />\n                            <label htmlFor=\"RegisterEmail\" className=\"grey-text\">Your email</label>\n                            <input type=\"email\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={this.handleChange} autoComplete='email' required/>\n                            <br />\n                            <label htmlFor=\"RegisterPassword\" className=\"grey-text\">Your password</label>\n                            <input type=\"password\" id=\"password\" className=\"form-control\" value={this.state.password} onChange={this.handleChange} autoComplete='password' required/>\n                            <br />\n                            <label htmlFor=\"RegisterPasswordConfirm\" className=\"grey-text\">Confirm your password</label>\n                            <input type=\"password\" id=\"repassword\" className=\"form-control\" />\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn type=\"submit\">Register</MDBBtn>\n                            </div>\n                        </form>\n                    </MDBCol>\n                    <MDBCol md=\"3\"/>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n};\n\nexport default withRouter(RegisterPage);"]},"metadata":{},"sourceType":"module"}