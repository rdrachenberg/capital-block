{"ast":null,"code":"import axios from 'axios';\nlet postMethodObj = {\n  method: 'POST',\n  credentials: 'include',\n  mode: 'cors',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nlet postMethodObjText = {\n  method: 'POST',\n  credentials: 'include',\n  mode: 'cors',\n  headers: {\n    \"Content-Type\": \"application/text\"\n  }\n};\n\nconst API = () => ({\n  // Get all users\n  getUsers: function () {\n    return axios.get('/api/user');\n  },\n  // Get a specific user by id \n  getUser: function (id) {\n    return axios.get('/api/user/' + id);\n  },\n  // Delete a user by id\n  deleteUser: function (id) {\n    return axios.delete('/api/user/' + id);\n  },\n  // Save a user to the Database \n  saveUser: function (userData) {\n    userData = JSON.stringify(userData); // console.log(userData);\n\n    return axios.post('/api/user/register', userData, postMethodObj);\n  },\n  // Update all users\n  updateUser: function (id, dataToUpdate) {\n    return axios.put('/api/user/' + id, dataToUpdate);\n  },\n  login: function (loginData) {\n    loginData = JSON.stringify(loginData);\n    console.log(loginData);\n    console.log('above is the loginData');\n    return axios.post('/api/user/login', loginData, postMethodObj);\n  },\n  //****************** POST ******************/\n  savePost: function (postData) {\n    postData = JSON.stringify(postData);\n    console.log(postData);\n    return axios.post('/api/post', postData, postMethodObj);\n  },\n  // Get all post\n  getPosts: function () {\n    return axios.get('/api/post');\n  },\n  logout: function () {\n    // data = JSON.stringify(data);\n    // console.log(data);\n    return axios.post('/api/user/logout', postMethodObjText);\n  }\n});\n\n_c = API;\nexport default API;\n\nvar _c;\n\n$RefreshReg$(_c, \"API\");","map":{"version":3,"sources":["/Users/ryan/Desktop/Kingsland-University/Homework Files/Module-6-Homework/capital-block/client/src/utils/API.js"],"names":["axios","postMethodObj","method","credentials","mode","headers","postMethodObjText","API","getUsers","get","getUser","id","deleteUser","delete","saveUser","userData","JSON","stringify","post","updateUser","dataToUpdate","put","login","loginData","console","log","savePost","postData","getPosts","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,aAAa,GAAG;AAACC,EAAAA,MAAM,EAAE,MAAT;AAAgBC,EAAAA,WAAW,EAAC,SAA5B;AAAuCC,EAAAA,IAAI,EAAE,MAA7C;AAAqDC,EAAAA,OAAO,EAAC;AAAC,oBAAiB;AAAlB;AAA7D,CAApB;AACA,IAAIC,iBAAiB,GAAG;AAACJ,EAAAA,MAAM,EAAE,MAAT;AAAiBC,EAAAA,WAAW,EAAC,SAA7B;AAAwCC,EAAAA,IAAI,EAAC,MAA7C;AAAqDC,EAAAA,OAAO,EAAC;AAAC,oBAAiB;AAAlB;AAA7D,CAAxB;;AACA,MAAME,GAAG,GAAG,OAAM;AAEd;AACAC,EAAAA,QAAQ,EAAE,YAAU;AAEhB,WAAOR,KAAK,CAACS,GAAN,CAAU,WAAV,CAAP;AACH,GANa;AAOd;AACAC,EAAAA,OAAO,EAAE,UAASC,EAAT,EAAY;AACjB,WAAOX,KAAK,CAACS,GAAN,CAAU,eAAeE,EAAzB,CAAP;AACH,GAVa;AAWd;AACAC,EAAAA,UAAU,EAAE,UAASD,EAAT,EAAY;AACpB,WAAOX,KAAK,CAACa,MAAN,CAAa,eAAeF,EAA5B,CAAP;AACH,GAda;AAed;AACAG,EAAAA,QAAQ,EAAE,UAASC,QAAT,EAAkB;AACxBA,IAAAA,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeF,QAAf,CAAX,CADwB,CAExB;;AACA,WAAOf,KAAK,CAACkB,IAAN,CAAW,oBAAX,EAAiCH,QAAjC,EAA2Cd,aAA3C,CAAP;AAEH,GArBa;AAsBd;AACAkB,EAAAA,UAAU,EAAE,UAASR,EAAT,EAAaS,YAAb,EAA0B;AAClC,WAAOpB,KAAK,CAACqB,GAAN,CAAU,eAAeV,EAAzB,EAA6BS,YAA7B,CAAP;AACH,GAzBa;AA4BdE,EAAAA,KAAK,EAAE,UAASC,SAAT,EAAmB;AACtBA,IAAAA,SAAS,GAAGP,IAAI,CAACC,SAAL,CAAeM,SAAf,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAOzB,KAAK,CAACkB,IAAN,CAAW,iBAAX,EAA8BK,SAA9B,EAAyCtB,aAAzC,CAAP;AACH,GAjCa;AAmCd;AACAyB,EAAAA,QAAQ,EAAE,UAASC,QAAT,EAAkB;AACxBA,IAAAA,QAAQ,GAAGX,IAAI,CAACC,SAAL,CAAeU,QAAf,CAAX;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,WAAO3B,KAAK,CAACkB,IAAN,CAAW,WAAX,EAAwBS,QAAxB,EAAkC1B,aAAlC,CAAP;AACH,GAzCa;AA2Cd;AACA2B,EAAAA,QAAQ,EAAE,YAAU;AAEhB,WAAO5B,KAAK,CAACS,GAAN,CAAU,WAAV,CAAP;AACH,GA/Ca;AAiDdoB,EAAAA,MAAM,EAAE,YAAU;AACd;AAEA;AACA,WAAO7B,KAAK,CAACkB,IAAN,CAAW,kBAAX,EAA+BZ,iBAA/B,CAAP;AACH;AAtDa,CAAN,CAAZ;;KAAMC,G;AAyDN,eAAeA,GAAf","sourcesContent":["import axios from 'axios';\nlet postMethodObj = {method: 'POST',credentials:'include', mode: 'cors', headers:{\"Content-Type\" : \"application/json\"}};\nlet postMethodObjText = {method: 'POST', credentials:'include', mode:'cors', headers:{\"Content-Type\" : \"application/text\"}};\nconst API = () =>({\n    \n    // Get all users\n    getUsers: function(){\n        \n        return axios.get('/api/user');\n    },\n    // Get a specific user by id \n    getUser: function(id){\n        return axios.get('/api/user/' + id);\n    },\n    // Delete a user by id\n    deleteUser: function(id){\n        return axios.delete('/api/user/' + id);\n    },\n    // Save a user to the Database \n    saveUser: function(userData){\n        userData = JSON.stringify(userData);\n        // console.log(userData);\n        return axios.post('/api/user/register', userData, postMethodObj);\n        \n    },\n    // Update all users\n    updateUser: function(id, dataToUpdate){\n        return axios.put('/api/user/' + id, dataToUpdate);\n    },\n    \n    \n    login: function(loginData){\n        loginData = JSON.stringify(loginData);\n        console.log(loginData);\n        console.log('above is the loginData');\n        return axios.post('/api/user/login', loginData, postMethodObj);\n    },\n\n    //****************** POST ******************/\n    savePost: function(postData){\n        postData = JSON.stringify(postData);\n\n        console.log(postData);\n        return axios.post('/api/post', postData, postMethodObj);\n    },\n\n    // Get all post\n    getPosts: function(){\n        \n        return axios.get('/api/post');\n    },\n\n    logout: function(){\n        // data = JSON.stringify(data);\n\n        // console.log(data);\n        return axios.post('/api/user/logout', postMethodObjText);\n    },\n});\n\nexport default API;"]},"metadata":{},"sourceType":"module"}